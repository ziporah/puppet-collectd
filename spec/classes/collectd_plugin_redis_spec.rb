require 'spec_helper'

describe 'collectd::plugin::redis', type: :class do
  let :facts do
    {
      osfamily: 'RedHat',
      collectd_version: '4.8.0',
      operatingsystemmajrelease: '7',
      python_dir: '/usr/local/lib/python2.7/dist-packages'
    }
  end

  context ':ensure => present, default params' do
    let :facts do
      {
        osfamily: 'RedHat',
        collectd_version: '4.8.0',
        operatingsystemmajrelease: '7',
        python_dir: '/usr/local/lib/python2.7/dist-packages'
      }
    end

    it 'Will create /etc/collectd.d/10-redis.conf' do
      is_expected.to contain_file('redis.load').
        with(ensure: 'present',
             path: '/etc/collectd.d/10-redis.conf',
             content: %r{# Generated by Puppet\nLoadPlugin redis\n\n<Plugin redis>\n  <Node "redis">\n    Host "localhost"\n    Port "6379"\n    Timeout 2000\n    <Query "DBSIZE">\n      Type "count"\n      Instance "dbsize"\n    </Query>\n  </Node>\n</Plugin>\n\n})
    end
  end

  context ':ensure => present, password => "testpassword"' do
    let :facts do
      {
        osfamily: 'RedHat',
        collectd_version: '4.8.0',
        operatingsystemmajrelease: '7',
        python_dir: '/usr/local/lib/python2.7/dist-packages'
      }
    end

    let :params do
      {
        nodes: {
          'redis' => {
            'host' => 'localhost',
            'port' => '6379',
            'password' => 'testpassword',
            'timeout' => 2000
          }
        }
      }
    end

    it 'Will create /etc/collectd.d/10-redis.conf with password' do
      is_expected.to contain_file('redis.load').
        with(ensure: 'present',
             path: '/etc/collectd.d/10-redis.conf',
             content: %r{# Generated by Puppet\nLoadPlugin redis\n\n<Plugin redis>\n  <Node "redis">\n    Host "localhost"\n    Port "6379"\n    Timeout 2000\n    Password "testpassword"\n  </Node>\n</Plugin>\n\n})
    end
  end

  context ':ensure => absent' do
    let :facts do
      {
        osfamily: 'RedHat',
        collectd_version: '4.8.0',
        operatingsystemmajrelease: '7',
        python_dir: '/usr/local/lib/python2.7/dist-packages'
      }
    end
    let :params do
      { ensure: 'absent' }
    end

    it 'Will not create /etc/collectd.d/10-redis.conf' do
      is_expected.to contain_file('redis.load').
        with(ensure: 'absent',
             path: '/etc/collectd.d/10-redis.conf')
    end
  end
end
